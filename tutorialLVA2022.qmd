---
title: "Herramientas y atajos para programar eficientemente con RStudio"
author: "Luis D. Verde Arregoitia"
subtitle: "LatinR 2022"
format: revealjs
editor: visual
---

```{r setup, include=FALSE}
library(fontawesome)
```

## 

::: columns
::: {.column width="50%"}
![](imgs/luisconmila.jpg){width="50%"}\
[`r fa(name = "twitter")` \@LuisDVerde](https://twitter.com/LuisDVerde)\
[`r fa(name = "github")` \@LuisDVA](https://github.com/luisdva)\
[`r fa(name = "link")` liomys.mx](https://liomys.mx)\
[`r fa(name = "paper-plane")` luis\@liomys.mx](mailto:luis@liomys.mx)
:::

::: {.column width="50%"}
-   Mastozoolog√≠a
-   Macroecolog√≠a
-   Modelos filogen√©ticos
-   Limpieza de datos
:::
:::

------------------------------------------------------------------------

::: columns
::: {.column width="50%"}
#### La consola

![](imgs/desert-gd4162a088_1920.jpg){width="80%"}
:::

::: {.column width="50%"}
#### IDE

![](imgs/cockpit-g11d804731_1920.jpg){width="50%"}
:::
:::

## Entornos de Programaci√≥n

### IDEs - Integrated development environments

</br>

-   Editor de texto
    -   Reconocen la sintaxis de un lenguaje de programaci√≥n
    -   Nos ayuda a enviar c√≥digo a un proceso de R en ejecuci√≥n
    -   Herramientas para facilitar

## 

RStudio\
Emacs + ESS (https://ess.r-project.org)\
vim + Nvim-R: ([Turn Vim Into an IDE for R](https://medium.com/free-code-camp/turning-vim-into-an-r-ide-cd9602e8c217))\
Visual Studio + [RTVS](https://docs.microsoft.com/en-us/visualstudio/rtvs)

## RStudio

------------------------------------------------------------------------

![](imgs/rstudiocheat.png)

------------------------------------------------------------------------

![](imgs/remote-work-airplane-laptop.jpg)

## Personalizaci√≥n

-   Colores para el IDE - üîó [tmThemeEditor](https://tmtheme-editor.herokuapp.com) por Allen Bargi

::: {style="backgroundcolor: pink"}
*No one at the coffee shop will know you're serious unless you have a dark background*

::: {style="text-align: right"}
*-Jared Lander*\
üìº [R: Then and now](https://www.youtube.com/watch?v=gjpNEVcG1nU)
:::
:::

-   Fuentes y texto - üîó [Nerd Fonts](https://www.nerdfonts.com/font-downloads)

-   Disposic√≥n de los p√°neles

## Personalizando el arranque en R

El archivo `.Rprofile` file contiene c√≥digo que se ejecuta cada que arrancamos R.

</br> [`.Rprofile` generalmente vive en nuestro directorio de inicio]{style="font-size: 1.2em; text-align: center"}

</br> Podemos modificarlo con `usethis::edit_r_profile()`

*Usar con precauci√≥n para no perder reproducibilidad*

::: {style="text-align: right"}
R Startup\
[What they forgot to teach you about R](https://rstats.wtf/r-startup.html%5D)
:::

## Pr√°ctica {background-color="#a4c5ff"}

Exploremos la diversidad de paquetes que hay en CRAN hoy mismo:

```{r}
#| echo: true
#| eval: false

library(dplyr)
library(stringr)
# download package details ------------------------------------------------
p_db <- tools::CRAN_package_db()
# select variables of interest -------------------------------------------
p_db <- p_db %>% select(Package, Author, Description, Title)
```

Veamos si sus campos o disciplinas aparecen en los t√≠tulos o descripciones.

## üì¶ `annotater`

https://annotater.liomys.mx

Agregar detalles sobre los paquetes que estamos mencionando en nuestros scripts

Fuente y versi√≥n

```{r}
#| echo: true
#| eval: false

library(dplyr)   # CRAN v1.0.7
library(janitor) # CRAN v2.1.0
```

T√≠tulo, fuente y versi√≥n

```{r}
#| echo: true
#| eval: false

library(readr) # Read Rectangular Text Data, CRAN v2.0.2
```

-   *Tambi√©n podemos anotar cu√°les funciones de c/ paquete estamos usando*

## üì¶ `littleboxes`

https://github.com/ThinkR-open/littleboxes

Cajas para t√≠tulos

```{r}
#| echo: true
#| eval: false

##%##################################################%##
#                                                      #
####    Mi an√°lisis en R ,  Luis, Oct 2022          ####
#                                                      #
##%##################################################%##

```

## üì¶ `packup`

https://github.com/MilesMcBain/packup

Acomoda los llamados a `library()` al principio del archivo, quitando duplicados y ordenando alfab√©ticamente.

> El orden alfab√©tico puede no ser adecuado

::: columns
::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false

data("starbucks")
# create vectors 
library(purrr)
fat <- starbucks$fat
carb <- starbucks$carb
library(purrr)
library(openintro)
```
:::

::: {.column width="50%"}
```{r}
#| echo: true
#| eval: false

library(openintro)
library(purrr)
data("starbucks")
# create vectors 
fat <- starbucks$fat
carb <- starbucks$carb
```
:::
:::

------------------------------------------------------------------------

## Secciones de c√≥digo y el esquema de documento

```{r}
#| echo: true
#| eval: false

# Mi secci√≥n nueva ------------------------------------ 
```

Dividir un script en segmentos discretos

Las secciones se pueden colapsar y funcionan con el panel de navegaci√≥n del editor de fuente.

-   Crear con cuatro guiones despu√©s de un comentario
-   Insertar con `ctrl` + `shift` + `R`

## Utilidades geniales

### üì¶ [`datapasta`](https://milesmcbain.github.io/datapasta/)

Copiar y pegar datos desde y hacia R, manipular vectores

![](imgs/tribble_paste.gif){width="48%"}

## Programando eficientemente

[Ctrl == ‚åò Command && Alt == ‚å• Option]{style="font-size: 1.5em; text-align: center"}

-   cursor multilinea (`ctrl`+`alt`+`arriba`) or (`ctrl`+`alt`+`abajo`)
    -   cesar con `escape`

## Atajos de teclado

-   panel de atajos (`alt`+`shift`+`k`)
-   insertar 'pipe' (`ctrl`+`shift`+`m`)
-   operador de asignaci√≥n (`alt`+`-`)
-   arrastrar l√≠nea (`alt`+`up`) or (`alt`+`down`)
-   ejectutar l√≠nea (`ctrl`+`enter`)

::: {style="text-align: right"}
[RStudio Shortcuts and Tips (2021)](https://appsilon.com/rstudio-shortcuts-and-tips/)
:::

## Atajos √∫tiles

-   Cambiar enfoque entre paneles
    -   (`ctrl`+`1` hasta `8`)
    -   Maximizar paneles con (`ctrl`+`shift`+`1` hasta `8`)

![](imgs/movingfocus.gif){width="48%"}

## M√°s atajos

Modificar selecci√≥n [`ctrl`+`alt`+`shift`+`m`]{style="color: orange"}

Para acceder a la documentaci√≥n [?]{style="color: orange"} o [F1]{style="color: orange"}

Abriendo objetos en el visualizador

[`ctrl` + click]{style="color: orange"}

# !Gracias!


::: columns
::: {.column width="50%"}

:::

::: {.column width="50%"}

:::
:::

::: columns
::: {.column width="50%"}

:::

::: {.column width="50%"}

:::
:::
